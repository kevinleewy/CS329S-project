{"version":3,"sources":["ImageCarousel.js","index.js"],"names":["StyledCarousel","styled","Carousel","withStreamlitConnection","renderData","useRenderData","useState","isFocused","imgs","args","texts","show","slide","theme","style","borderStyling","primaryColor","border","outline","id","swiping","map","img","index","display","flexDirection","height","width","src","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAOMA,EAAiBC,YAAOC,IAAPD,CAAH,0YAqDLE,qCAlCc,WAG3B,IAAMC,EAAaC,0BAEnB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAEMC,GAFN,KAEaJ,EAAWK,KAAX,MACPC,EAAQN,EAAWK,KAAX,OAA4B,GACpCE,EAAOP,EAAWK,KAAX,YAAiC,IACxCG,EAAQR,EAAWK,KAAX,aAAkC,EAE1CI,EAAQT,EAAWS,MACnBC,EAAQ,GACd,GAAID,EAAO,CACT,IAAME,EAAa,oBAAgBR,EAAYM,EAAMG,aAAe,QACpEF,EAAMG,OAASF,EACfD,EAAMI,QAAUH,EAGlB,OACE,kBAACf,EAAD,CAAgBmB,GAAG,iBAAiBR,KAAMA,EAAMC,MAAOA,EAAOQ,SAAS,GACpEZ,EAAKa,KAAI,SAACC,EAAKC,GACd,OACE,yBAAKT,MAAO,CAAEU,QAAS,OAAQC,cAAe,WAC5C,yBAAKC,OAAO,QAAQC,MAAM,QAAQC,IAAKN,EAAKO,IAAK,MAAQN,IACxDb,EAAMa,IAAU,WC9C7BO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,oBAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.efc55e82.chunk.js","sourcesContent":["import { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\"\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport React, { useState } from \"react\"\nimport styled from \"styled-components\"\n\nimport { Carousel } from \"@trendyol-js/react-carousel\"\n\nconst StyledCarousel = styled(Carousel)`\n  & > div > button {\n    height: 100%;\n    background: url(https://cdn.dsmcdn.com/web/production/slick-arrow.svg) 100% no-repeat;\n    margin-left: 10px;\n    margin-right: 10px;\n    border: none;\n  }\n\n  & > div > button[data-direction=left] {\n    transform: rotate(180deg);\n  }\n\n  & > div > button:focus {\n    outline: none;\n    box-shadow: none;\n  }\n`\n\nexport const ImageCarousel = () => {\n  // Streamlit.setFrameHeight(200)\n\n  const renderData = useRenderData()\n\n  const [isFocused, setIsFocused] = useState(false)\n\n  const imgs = renderData.args[\"imgs\"]\n  const texts = renderData.args[\"texts\"] || []\n  const show = renderData.args[\"show_count\"] || 4.5\n  const slide = renderData.args[\"slide_count\"] || 4\n\n  const theme = renderData.theme\n  const style = {}\n  if (theme) {\n    const borderStyling = `1px solid ${isFocused ? theme.primaryColor : \"gray\"}`\n    style.border = borderStyling\n    style.outline = borderStyling\n  }\n\n  return (\n    <StyledCarousel id=\"image_carousel\" show={show} slide={slide} swiping={true}>\n      {imgs.map((img, index) => {\n        return (\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <img height=\"200px\" width=\"200px\" src={img} key={\"img\" + index} />\n            {texts[index] || \"\"}\n          </div>\n        )\n      })}\n    </StyledCarousel>\n  )\n}\n\nexport default withStreamlitConnection(ImageCarousel)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport ImageCarousel from \"./ImageCarousel\"\n// import \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ImageCarousel />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}